#ifndef gyro_h
#define gyro_h
#include "Arduino.h"



class gyro
{
public:
   gyro();

int gyro_x, gyro_y, gyro_z;

float acc_x, acc_y, acc_z, acc_total_vector;
long acc_inputx, acc_inputy, acc_inputz;


long gyro_x_cal, gyro_y_cal, gyro_z_cal;

float angle_pitch, angle_roll;

int angle_pitch_buffer, angle_roll_buffer;

boolean set_gyro_angles;

float angle_roll_acc, angle_pitch_acc;

float angle_pitch_output, angle_roll_output;
}
#endif

#include <Wire.h>
#include "Arduino.h"
#include "gyro.h"

gyro::gyro()
{//write a constructor function
}


gyro my_ang();

long loop_timer;

int lcd_loop_counter;



void setup()
{
  Wire.begin();  
   Serial.begin(57600);
 
  setup_mpu_6050_registers(); 

   digitalWrite(13, HIGH);   

   
   delay(1500);   

   
  for (int cal_int = 0; cal_int < 2000 ; cal_int ++)
   {        read_mpu_6050_data();  
    my_ang.gyro_x_cal += my_ang.gyro_x; 

    my_ang.gyro_y_cal += my_ang.gyro_y; 

    my_ang.gyro_z_cal += my_ang.gyro_z; 

    delay(3);             
   }

  my_ang.gyro_x_cal /= 2000; 

  my_ang.gyro_y_cal /= 2000; 

  my_ang.gyro_z_cal /= 2000; 
  digitalWrite(13, LOW); 

  
loop_timer = micros();   

}



void loop()
{

  read_mpu_6050_data();   


  my_ang.gyro_x -= my_ang.gyro_x_cal;  
   my_ang.gyro_y -= my_ang.gyro_y_cal;   
   gyro_z -= gyro_z_cal;   

  
  //Gyro angle calculations

  my_ang.angle_pitch += my_ang.gyro_x * 0.0000611;
  my_ang.angle_roll += my_ang.gyro_y * 0.0000611;  

 //0.000001066 = 0.0000611 * (3.142(PI) / 180degr) 
  my_ang.angle_pitch += my_ang.angle_roll * sin(gyro_z * 0.000001066);
  my_ang.angle_roll -= my_ang.angle_pitch * sin(gyro_z * 0.000001066); 
 
  //Accelerometer angle calculations

  my_ang.acc_total_vector = sqrt((my_ang.acc_x*my_ang.acc_x)+(my_ang.acc_y*my_ang.acc_y)+(my_ang.acc_z*my_ang.my_ang.acc_z));  
//Calculate the total accelerometer vector
  //57.296 = 1 / (3.142 / 180) 










